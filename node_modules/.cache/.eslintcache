[{"/home/user/phase5proj/proj/src/index.js":"1","/home/user/phase5proj/proj/src/App.js":"2","/home/user/phase5proj/proj/src/reportWebVitals.js":"3","/home/user/phase5proj/proj/src/components/Signup.js":"4","/home/user/phase5proj/proj/src/components/Login.js":"5"},{"size":535,"mtime":1698699350453,"results":"6","hashOfConfig":"7"},{"size":240,"mtime":1699262788437,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1698699350453,"results":"9","hashOfConfig":"7"},{"size":4951,"mtime":1699269226114,"results":"10","hashOfConfig":"7"},{"size":4367,"mtime":1699273902063,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"7ogyya",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/phase5proj/proj/src/index.js",[],[],["30"],"/home/user/phase5proj/proj/src/App.js",["31"],[],"import './App.css';\nimport SignUp from './components/Signup';\nimport LogIn from './components/Login';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <SignUp />   */}\n      <LogIn />\n    </div>\n  );\n}\n\nexport default App;\n","/home/user/phase5proj/proj/src/reportWebVitals.js",[],[],"/home/user/phase5proj/proj/src/components/Signup.js",["32"],[],"import React from \"react\";\nimport '../App.css';\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport '../styles/signup.css'\nimport img from \"../resource/signup.jpeg\";\nimport bcrypt from \"bcryptjs/dist/bcrypt\";\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n\nconst userSchema = yup.object().shape({\n  name: yup.string().min(5).required(\"Name is required\"),\n  email: yup.string().email().required(\"Please enter valid email\"),\n  password: yup\n    .string()\n    .min(5)\n    .matches(passwordRules, {message : \"Please create a stronger password.\" })\n    .required(\"Password is required\"),\n});\n// It must contain at least one digit, one lowercase letter and one uppercase letter and must be at least 5 characters long.\nconst onSubmit = async (values, actions) => {\n\n  const hashedpassword = bcrypt.hashSync(values.password, 10);\n  console.log(hashedpassword + \"AFTER submission\");\n  actions.setValues({...values, hashedpassword: hashedpassword});\n  console.log(values);\n//    console.log(actions);\n  console.log(\"submitted\");\n\n// put post api here\nwindow.localStorage.setItem('signup', JSON.stringify({values}))\n  await new Promise((resolve) => setTimeout(resolve, 1000));\n  //actions.resetForm(); \n};\n\nfunction SignUp() {\n  const {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n  } = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      hashedpassword: \"\",\n    },\n    validationSchema: userSchema,\n    onSubmit,\n  });\n\n  console.log(values)\n\n  return (\n    <>\n      <div className=\"grid md:grid-cols-2   md:h-[100vh]  \">\n        <div className=\" bg-[#bad9d8] hidden md:block w-[50vw] pt-60 lg:pt-10 \">\n          <img className=\"w-[50vw] h-auto\" src={img} alt=\"Sign Up\" />\n          <div className=\"flex justify-center text-[18px] lg:text-[24px]  \">\n            <p>\n              Become part of our{\" \"}\n              <span className=\"text-[#235F97]\">community</span>. <br /> Get\n              access to our services and life becomes easier with us\n            </p>\n          </div>\n        </div>\n        <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12\">\n          <h1 className=\"text-center font-bold text-3xl lg:text-5xl mb-1\">Sign Up</h1>\n          <p className=\"text-center font-medium text-2xl lg:text-4xl\">\n            The start of something new\n          </p>\n\n          <div className=\" md:mx-auto md:w-auto lg:w-full md:max-w-sm\">\n            <form\n              className=\"m-0 flex flex-col space-y-10\"\n              onSubmit={handleSubmit}\n              autoComplete=\"on\"\n            >\n              <label className=\"\">Name</label>\n              <input\n                className={errors.name && touched.name ? \"input-error\" : \"\"}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"John Doe\"\n              />\n              {errors.name && touched.name && (\n                <p className=\"error\">{errors.name}</p>\n              )}\n              <label className=\"\">Email</label>\n              <input\n                className={errors.email && touched.email ? \"input-error\" : \"\"}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                id=\"email\"\n                type=\"text\"\n                placeholder=\"johndoe@gmail.com\"\n              />\n              {errors.email && touched.email && (\n                <p className=\"error\">{errors.email}</p>\n              )}\n              <label className=\"\">Password</label>\n              <input\n                className={\n                  errors.password && touched.password ? \"input-error\" : \"\"\n                }\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n              />\n              {errors.password && touched.password && (\n                <p className=\"error\">{errors.password}</p>\n              )}\n              <button\n                disabled={isSubmitting}\n                className=\"bg-[#235F97] flex w-full justify-center rounded-md px-3 p-2.5 text-base font-semibold leading-6 text-white shadow-sm hover:bg-indigo-900 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                type=\"submit\"\n              >\n                SIGN UP\n              </button>\n            </form>\n            <br />\n            <div className=\"ml-5\">\n              This isn't my first rodeo!{\" \"}\n              <a href=\"#\" className=\"text-[#235F97]\">\n                LOGIN\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SignUp;","/home/user/phase5proj/proj/src/components/Login.js",["33","34"],[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":135,"column":15,"nodeType":"43","endLine":135,"endColumn":54},{"ruleId":"37","severity":1,"message":"44","line":1,"column":16,"nodeType":"39","messageId":"40","endLine":1,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":122,"column":15,"nodeType":"43","endLine":122,"endColumn":54},"no-new-object",["45"],"no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","no-object-constructor"]